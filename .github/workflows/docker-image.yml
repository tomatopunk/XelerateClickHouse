name: Compile Go program on PR

on:
  pull_request:
    types:
      - opened
      - synchronize

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16

      - name: Build
        run: go build ./cmd/

  enforce-compilation:
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16

      - name: Build
        run: go build ./cmd/

      - name: Check if the build was successful
        run: |
          if [ $? -eq 0 ]; then
            echo "Build succeeded!"
            exit 0
          else
            echo "Build failed! Please fix the compilation errors."
            exit 1
          fi

  enforce-compilation-on-pr:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16

      - name: Build
        run: go build ./...

      - name: Check if the build was successful
        run: |
          if [ $? -eq 0 ]; then
            echo "Build succeeded!"
            exit 0
          else
            echo "Build failed! Please fix the compilation errors."
            exit 1
          fi

      - name: Comment on PR
        if: ${{ failure() }}
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const prNumber = context.payload.pull_request.number;
            const comment = `
              :x: The build failed. Please fix the compilation errors before merging.
            `;
            const octokit = require('@octokit/rest')();
            octokit.authenticate({
              type: 'token',
              token: process.env.GITHUB_TOKEN
            });
            octokit.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              body: comment
            });
